#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std; 
int main() 
{ 
 double x[5][2],x_[50],d0,d1,d,f0,f1,f2,f3,f4,p,q,r,s,x_0,x_1; 
 int i=0,j; 
 double e=0.001; 
 cout<<"enter del values"<<endl; 
 cin>>d0>>d1; 
 d=sqrt((d0*d0+d1*d1)); 
 //cout<<"d="<<d;
 cout<<"\nenter initial approx."<<endl; 
 cin>>x[0][0]; 
 cin>>x[0][1]; 
 while(d0>e && d1>e) 
 { 
 x[1][0]=x[0][0]-(d0/2); 
 x[1][1]=x[0][1]-(d1/2); 
 x[2][0]=x[0][0]-(d0/2); 
 x[2][1]=x[0][1]+(d1/2); 
 x[3][0]=x[0][0]+(d0/2); 
 x[3][1]=x[0][1]+(d1/2); 
 x[4][0]=x[0][0]+(d0/2); 
 x[4][1]=x[0][1]-(d1/2); 
 f0=((x[0][0]*x[0][0]+x[0][1]-15)*(x[0][0]*x[0][0]+x[0][1]-
15))+((x[0][1]*x[0][1]+x[0][0]-11)*(x[0][1]*x[0][1]+x[0][0]-11)); 
 f1=((x[1][0]*x[1][0]+x[1][1]-15)*(x[1][0]*x[1][0]+x[1][1]-
15))+((x[1][1]*x[1][1]+x[1][0]-11)*(x[1][1]*x[1][1]+x[1][0]-11)); 
 f2=((x[2][0]*x[2][0]+x[2][1]-15)*(x[2][0]*x[2][0]+x[2][1]-
15))+((x[2][1]*x[2][1]+x[2][0]-11)*(x[2][1]*x[2][1]+x[2][0]-11)); 
 f3=((x[3][0]*x[3][0]+x[3][1]-15)*(x[3][0]*x[3][0]+x[3][1]-
15))+((x[3][1]*x[3][1]+x[3][0]-11)*(x[3][1]*x[3][1]+x[3][0]-11)); 
 f4=((x[4][0]*x[4][0]+x[4][1]-15)*(x[4][0]*x[4][0]+x[4][1]-
15))+((x[4][1]*x[4][1]+x[4][0]-11)*(x[4][1]*x[4][1]+x[4][0]-11)); 
 p=std::min(f0,f1); 
 //cout<<std::min(f0,f1);
 q=std::min(f2,f3); 
 r=std::min(p,q); 
 s=std::min(r,f4); //min value of fn.
 //cout<<"min="<<s;
 //cout<<"\n"<<f0<<","<<f1<<","<<f2<<","<<f3<<","<<f4<<endl;
 if(s==((x[0][0]*x[0][0]+x[0][1]-15)*(x[0][0]*x[0][0]+x[0][1]-
15))+((x[0][1]*x[0][1]+x[0][0]-11)*(x[0][1]*x[0][1]+x[0][0]-11))) 
 { 
 x[0][0]=x[0][0]; 
 x[0][1]=x[0][1]; 
 x_[i]=s; 
 
 } 
 else if(s==((x[1][0]*x[1][0]+x[1][1]-15)*(x[1][0]*x[1][0]+x[1][1]-
15))+((x[1][1]*x[1][1]+x[1][0]-11)*(x[1][1]*x[1][1]+x[1][0]-11))) 
 { 
 x[0][0]=x[1][0]; 
 x[0][1]=x[1][1]; 
 x_[i]=s; 
 } 
 else if(s==((x[2][0]*x[2][0]+x[2][1]-15)*(x[2][0]*x[2][0]+x[2][1]-
15))+((x[2][1]*x[2][1]+x[2][0]-11)*(x[2][1]*x[2][1]+x[2][0]-11))) 
 { 
 x[0][0]=x[2][0]; 
 x[0][1]=x[2][1]; 
 x_[i]=s; 
 } 
 else if(s==((x[3][0]*x[3][0]+x[3][1]-15)*(x[3][0]*x[3][0]+x[3][1]-
15))+((x[3][1]*x[3][1]+x[3][0]-11)*(x[3][1]*x[3][1]+x[3][0]-11))) 
 { 
 x[0][0]=x[3][0]; 
 x[0][1]=x[3][1]; 
 x_[i]=s; 
 } 
 else if(s==((x[4][0]*x[4][0]+x[4][1]-15)*(x[4][0]*x[4][0]+x[4][1]-
15))+((x[4][1]*x[4][1]+x[4][0]-11)*(x[4][1]*x[4][1]+x[4][0]-11))) 
 { 
 x[0][0]=x[4][0]; 
 x[0][1]=x[4][1]; 
 x_[i]=s; 
 } 
 if(i>=1 && x_[i]==x_[i-1]) 
 { 
 d0=d0/2; 
 d1=d1/2; 
 } 
 i++; 
 } 
 cout<<"The minimum lies bt "<<x[0][0]<<" and "<<x[0][1]<<endl; 
}